# -*- mode: ruby -*-
# vi: set ft=ruby :

# This is a copy of the `vagrants` environment modified
# to add automatic swarm bootstrapping (via adding a few provisioners)
# and as long as you boot m1 first and don't do it in parallel with other VMs
# such that m1 can init the swarm before any other node attempts to join 
# then the rest can be done in any order and in parallel if desired

# to call the host helpers (if desired, they are not required), use the following:
# make sure to call `../vagrants/host/host-cleanup.sh` first or the ssh config will be wrong (key is specified with an absolute path)
# `../vagrants/host/host-setup.sh` 


Vagrant.configure('2') do |config|
  config.vm.box = 'ubuntu/hirsute64'

  # define manager nodes
  (1..3).each do |number|
    config.vm.define "m#{number}" do |node|
      node.vm.network 'private_network', ip: "192.168.99.20#{number}"
      # hard code a unique host port
      node.vm.network 'forwarded_port', id: 'ssh', host: "820#{number}", guest: "22"
      node.vm.hostname = "m#{number}"

      if number == 1
        node.vm.provision 'shell', path: 'scripts/m1-swarm-init.sh'
      else
        node.vm.provision 'shell', path: 'scripts/manager-join.sh'
      end

    end
  end
  
  # define worker nodes
  (1..4).each do |number|
    config.vm.define "w#{number}" do |node|
      node.vm.network 'private_network', ip: "192.168.99.21#{number}"
      node.vm.network 'forwarded_port', id: 'ssh', host: "821#{number}", guest: "22"
      node.vm.hostname = "w#{number}"

      node.vm.provision 'shell', path: 'scripts/worker-join.sh'

    end
  end
  
  # tweak vm settings to optimize for your machine:
  config.vm.provider 'virtualbox' do |vb|
    vb.memory = '4096'
    vb.cpus = 2
  end
  
  # install docker:
  config.vm.provision 'docker'
  
  # (optional) tools for demos:
  config.vm.provision 'shell', inline: <<-SHELL
    sudo apt-get install -y tree bat jq
    touch ~vagrant/.hushlogin
  SHELL
end
